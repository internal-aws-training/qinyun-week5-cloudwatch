---
AWSTemplateFormatVersion: '2010-09-09'

Description: AWS CloudWatch training task1

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: AWSLambdaBasicExecutionRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*

  PushMetricsFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: LambdaFunctionPushMetrics
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code: ../../src
      Runtime: "python3.7"
      Timeout: 3

  TriggerLambdaEvent:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 minute)
      Targets:
        Arn: !GetAtt PushMetricsFunction.Arn
        Id: LambdaFunctionPushMetrics
        RoleArn: !GetAtt LambdaExecutionRole.Arn
      
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: LambdaInvokes
      Subscription:
        - Endpoint: oojbjoo@gmail.com
          Protocol: email
      TopicName: LambdaInvokesMoreThan5Times

  CloudWatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: LambdaInvocationsAlarm
      ActionsEnabled: TRUE
      AlarmActions:
        - !Ref SNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Invocations
      Namespace: AWS/Lambda
      Threshold: 5
      Dimensions:
        - Name: Invocations
        - Value: Times
